.grid {
  display: flex;
  flex-direction: row;
  flex-wrap: wrap;
  align-items: stretch;
  padding: 0;

  // Gutters
  margin-top: -($rowSpacing / 2);
  margin-bottom: -($rowSpacing / 2);
  margin-left: -($gutterWidth / 2);
  margin-right: -($gutterWidth / 2);
}

.grid + .grid {
  margin-top: $consecutiveGridDistance;
}

/* Standard 16 column */
.grid > .column:not(.row),
.grid > .row > .column {
  position: relative;
  display: inline-block;

  width: $oneWide;
  padding-left: ($gutterWidth / 2);
  padding-right: ($gutterWidth / 2);
  vertical-align: top;
}

.grid > * {
  padding-left: ($gutterWidth / 2);
  padding-right: ($gutterWidth / 2);
}

.grid > .row {
  position: relative;
  display: flex;
  flex-direction: row;
  flex-wrap: wrap;
  justify-content: inherit;
  align-items: stretch;
  width: 100% !important;
  padding: 0;
  padding-top: ($rowSpacing / 2);
  padding-bottom: ($rowSpacing / 2);
}

/*-------------------
       Columns
--------------------*/

/* Vertical padding when no rows */
.grid > .column:not(.row) {
  padding-top: ($rowSpacing / 2);
  padding-bottom: ($rowSpacing / 2);
}
.grid > .row > .column {
  margin-top: 0;
  margin-bottom: 0;
}

/*----------------------
        Centered
-----------------------*/

.centered.grid,
.centered.grid > .row,
.grid > .centered.row {
  text-align: center;
  justify-content: center;
}
.centered.grid > .column:not(.aligned):not(.justified):not(.row),
.centered.grid > .row > .column:not(.aligned):not(.justified),
.grid .centered.row > .column:not(.aligned):not(.justified) {
  text-align: left;
}

.grid > .centered.column,
.grid > .row > .centered.column {
  display: block;
  margin-left: auto;
  margin-right: auto;
}

/*-------------------
     Column Count
--------------------*/

/* Assume full width with one column */
.grid > .column:only-child,
.grid > .row > .column:only-child {
  width: $oneColumn;
}

/* Grid Based */
[class*="one column"].grid > .row > .column,
[class*="one column"].grid > .column:not(.row) {
  width: $oneColumn;
}
[class*="two column"].grid > .row > .column,
[class*="two column"].grid > .column:not(.row) {
  width: $twoColumn;
}
[class*="three column"].grid > .row > .column,
[class*="three column"].grid > .column:not(.row) {
  width: $threeColumn;
}
[class*="four column"].grid > .row > .column,
[class*="four column"].grid > .column:not(.row) {
  width: $fourColumn;
}
[class*="five column"].grid > .row > .column,
[class*="five column"].grid > .column:not(.row) {
  width: $fiveColumn;
}
[class*="six column"].grid > .row > .column,
[class*="six column"].grid > .column:not(.row) {
  width: $sixColumn;
}
[class*="seven column"].grid > .row > .column,
[class*="seven column"].grid > .column:not(.row) {
  width: $sevenColumn;
}
[class*="eight column"].grid > .row > .column,
[class*="eight column"].grid > .column:not(.row) {
  width: $eightColumn;
}
[class*="nine column"].grid > .row > .column,
[class*="nine column"].grid > .column:not(.row) {
  width: $nineColumn;
}
[class*="ten column"].grid > .row > .column,
[class*="ten column"].grid > .column:not(.row) {
  width: $tenColumn;
}
[class*="eleven column"].grid > .row > .column,
[class*="eleven column"].grid > .column:not(.row) {
  width: $elevenColumn;
}
[class*="twelve column"].grid > .row > .column,
[class*="twelve column"].grid > .column:not(.row) {
  width: $twelveColumn;
}
[class*="thirteen column"].grid > .row > .column,
[class*="thirteen column"].grid > .column:not(.row) {
  width: $thirteenColumn;
}
[class*="fourteen column"].grid > .row > .column,
[class*="fourteen column"].grid > .column:not(.row) {
  width: $fourteenColumn;
}
[class*="fifteen column"].grid > .row > .column,
[class*="fifteen column"].grid > .column:not(.row) {
  width: $fifteenColumn;
}
[class*="sixteen column"].grid > .row > .column,
[class*="sixteen column"].grid > .column:not(.row) {
  width: $sixteenColumn;
}

/* Row Based Overrides */
.grid > [class*="one column"].row > .column {
  width: $oneColumn !important;
}
.grid > [class*="two column"].row > .column {
  width: $twoColumn !important;
}
.grid > [class*="three column"].row > .column {
  width: $threeColumn !important;
}
.grid > [class*="four column"].row > .column {
  width: $fourColumn !important;
}
.grid > [class*="five column"].row > .column {
  width: $fiveColumn !important;
}
.grid > [class*="six column"].row > .column {
  width: $sixColumn !important;
}
.grid > [class*="seven column"].row > .column {
  width: $sevenColumn !important;
}
.grid > [class*="eight column"].row > .column {
  width: $eightColumn !important;
}
.grid > [class*="nine column"].row > .column {
  width: $nineColumn !important;
}
.grid > [class*="ten column"].row > .column {
  width: $tenColumn !important;
}
.grid > [class*="eleven column"].row > .column {
  width: $elevenColumn !important;
}
.grid > [class*="twelve column"].row > .column {
  width: $twelveColumn !important;
}
.grid > [class*="thirteen column"].row > .column {
  width: $thirteenColumn !important;
}
.grid > [class*="fourteen column"].row > .column {
  width: $fourteenColumn !important;
}
.grid > [class*="fifteen column"].row > .column {
  width: $fifteenColumn !important;
}
.grid > [class*="sixteen column"].row > .column {
  width: $sixteenColumn !important;
}

/*----------------------
   Vertically Aligned
-----------------------*/

/* Top Aligned */
[class*="top aligned"].grid > .column:not(.row),
[class*="top aligned"].grid > .row > .column,
.grid > [class*="top aligned"].row > .column,
.grid > [class*="top aligned"].column:not(.row),
.grid > .row > [class*="top aligned"].column {
  flex-direction: column;
  vertical-align: top;
  align-self: flex-start !important;
}

/* Middle Aligned */
[class*="middle aligned"].grid > .column:not(.row),
[class*="middle aligned"].grid > .row > .column,
.grid > [class*="middle aligned"].row > .column,
.grid > [class*="middle aligned"].column:not(.row),
.grid > .row > [class*="middle aligned"].column {
  flex-direction: column;
  vertical-align: middle;
  align-self: center !important;
}

/* Bottom Aligned */
[class*="bottom aligned"].grid > .column:not(.row),
[class*="bottom aligned"].grid > .row > .column,
.grid > [class*="bottom aligned"].row > .column,
.grid > [class*="bottom aligned"].column:not(.row),
.grid > .row > [class*="bottom aligned"].column {
  flex-direction: column;
  vertical-align: bottom;
  align-self: flex-end !important;
}

/* Stretched */
.stretched.grid > .row > .column,
.stretched.grid > .column,
.grid > .stretched.row > .column,
.grid > .stretched.column:not(.row),
.grid > .row > .stretched.column {
  display: inline-flex !important;
  align-self: stretch;
  flex-direction: column;
}

.stretched.grid > .row > .column > *,
.stretched.grid > .column > *,
.grid > .stretched.row > .column > *,
.grid > .stretched.column:not(.row) > *,
.grid > .row > .stretched.column > * {
  flex-grow: 1;
}

/*----------------------
  Horizontally Centered
-----------------------*/

/* Left Aligned */
[class*="left aligned"].grid > .column,
[class*="left aligned"].grid > .row > .column,
.grid > [class*="left aligned"].row > .column,
.grid > [class*="left aligned"].column.column,
.grid > .row > [class*="left aligned"].column.column {
  text-align: left;
  align-self: inherit;
}

/* Center Aligned */
[class*="center aligned"].grid > .column,
[class*="center aligned"].grid > .row > .column,
.grid > [class*="center aligned"].row > .column,
.grid > [class*="center aligned"].column.column,
.grid > .row > [class*="center aligned"].column.column {
  text-align: center;
  align-self: inherit;
}
[class*="center aligned"].grid {
  justify-content: center;
}

/* Right Aligned */
[class*="right aligned"].grid > .column,
[class*="right aligned"].grid > .row > .column,
.grid > [class*="right aligned"].row > .column,
.grid > [class*="right aligned"].column.column,
.grid > .row > [class*="right aligned"].column.column {
  text-align: right;
  align-self: inherit;
}

/* Justified */
.justified.grid > .column,
.justified.grid > .row > .column,
.grid > .justified.row > .column,
.grid > .justified.column.column,
.grid > .row > .justified.column.column {
  text-align: justify;
  hyphens: auto;
}
